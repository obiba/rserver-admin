#!/bin/bash

# OS specific support.
cygwin=false
case "`uname`" in
CYGWIN*) cygwin=true;;
esac

if [ -z "$JAVA_OPTS" ]
then
  # Set default JAVA_OPTS
  export JAVA_OPTS="-Xmx2G"
fi

# The directory containing the server shell script
RSERVER_BIN_DIR=`dirname $0`
# resolve links - $0 may be a softlink
RSERVER_DIST=$(readlink -f $RSERVER_BIN_DIR/..)

export RSERVER_DIST

export RSERVER_LOG=$RSERVER_HOME/logs

echo "JAVA_OPTS=$JAVA_OPTS"
echo "RSERVER_HOME=$RSERVER_HOME"
echo "RSERVER_DIST=$RSERVER_DIST"

if [ -z "$RSERVER_HOME" ]
then
  echo "RSERVER_HOME not set."
  exit 2;
fi

if $cygwin; then
  # For Cygwin, ensure paths are in UNIX format before anything is touched
  [ -n "$RSERVER_DIST" ] && RSERVER_BIN=`cygpath --unix "$RSERVER_DIST"`
  [ -n "$RSERVER_HOME" ] && RSERVER_HOME=`cygpath --unix "$RSERVER_HOME"`
  
  # For Cygwin, switch paths to Windows format before running java  
  export RSERVER_DIST=`cygpath --absolute --windows "$RSERVER_DIST"`
  export RSERVER_HOME=`cygpath --absolute --windows "$RSERVER_HOME"`
fi

CLASSPATH=$RSERVER_HOME/conf:$RSERVER_DIST/lib/*
if $cygwin; then
  CLASSPATH=$RSERVER_HOME/conf;$RSERVER_DIST/lib/*
fi

[ -e "$RSERVER_HOME/logs" ] || mkdir "$RSERVER_HOME/logs"

JAVA_DEBUG=-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n

# Add $JAVA_DEBUG to this line to enable remote JVM debugging (for developers)
java $JAVA_OPTS -cp "$CLASSPATH" -DRSERVER_HOME="${RSERVER_HOME}" -DRSERVER_DIST=${RSERVER_DIST} -DRSERVER_LOG=${RSERVER_LOG} org.springframework.boot.loader.JarLauncher $@
